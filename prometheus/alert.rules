groups:
- name: targets
  rules:
  - alert: monitor_service_down
    expr: up == 0
    for: 30s
    labels:
      severity: critical
    annotations:
      summary: "Monitor service non-operational"
      description: "Service {{ $labels.instance }} is down."

- name: postgres_exporter
  rules:
  - alert: PostgresNotResponding
    expr: pg_exporter_last_scrape_error == 1
    for: 5m
    labels:
      service: PostgreSQL
      severity: critical
    annotations:
      summary: "Postgres server is down"
      description: "Postgres has not been responding for the past 5 minutes on {{ $labels.instance }}"

  - alert: PostgresHighConnectionCount
    expr: sum(pg_stat_activity_count) > (pg_settings_max_connections * 0.7)
    for: 5m
    labels:
      service: PostgreSQL
      severity: warning
    annotations:
      summary: "Postgres server total connections high"
      description: "Postgres total connections have been above 70% of the configured max_connections for the past 5 minutes on {{ $labels.instance }}"

  - alert: PostgresHighConnectionCount
    expr: sum(pg_stat_activity_count) > (pg_settings_max_connections * 0.9)
    for: 5m
    labels:
      service: PostgreSQL
      severity: critical
    annotations:
      summary: "Postgres server total connections high"
      description: "Postgres total connections have been above 90% of the configured max_connections for the past 5 minutes on {{ $labels.instance }}"

  - alert: PostgreSQLSlowQueries
    expr: avg(rate(pg_stat_activity_max_tx_duration{datname!~"template.*"}[2m])) by (datname) > 2 * 60
    for: 2m
    labels:
      service: PostgreSQL
      severity: warning
    annotations:
      summary: "PostgreSQL high number of slow on {{ $labels.cluster }} for database {{ $labels.datname }} "
      description: "PostgreSQL high number of slow queries {{ $labels.cluster }} for database {{ $labels.datname }} with a value of {{ $value }} "

  - alert: PostgreSQLQPS
    expr: avg(irate(pg_stat_database_xact_commit{datname!~"template.*"}[5m]) + irate(pg_stat_database_xact_rollback{datname!~"template.*"}[5m])) by (datname) > 10000
    for: 5m
    labels:
      service: PostgreSQL
      severity: warning
    annotations:
      summary: "PostgreSQL high number of queries per second {{ $labels.cluster }} for database {{ $labels.datname }} "
      description: "PostgreSQL high number of queries per second on {{ $labels.cluster }} for database {{ $labels.datname }} with a value of {{ $value }} "

  - alert: PostgreSQLCacheHitRatio
    expr: avg(rate(pg_stat_database_blks_hit{datname!~"template.*"}[5m]) / (rate(pg_stat_database_blks_hit{datname!~"template.*"}[5m]) + rate(pg_stat_database_blks_read{datname!~"template.*"}[5m]))) by (datname) < 0.98
    for: 5m
    labels:
      service: PostgreSQL
      severity: warning
    annotations:
      summary: "PostgreSQL low cache hit rate on {{ $labels.cluster }} for database {{ $labels.datname }} "
      description: "PostgreSQL low on cache hit rate on {{ $labels.cluster }} for database {{ $labels.datname }} with a value of {{ $value }} "

  - alert: PostgresqlExporterError
    expr: pg_exporter_last_scrape_error > 0
    for: 0m
    labels:
      service: PostgreSQL
      severity: critical
    annotations:
      summary: Postgresql exporter error (instance {{ $labels.instance }})
      description: "Postgresql exporter is showing errors. A query may be buggy in query.yaml\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PostgresqlTableNotVacuumed
    expr: time() - pg_stat_user_tables_last_autovacuum > 60 * 60 * 24
    for: 0m
    labels:
      service: PostgreSQL
      severity: warning
    annotations:
      summary: Postgresql table not vacuumed (instance {{ $labels.instance }})
      description: "Table has not been vacuumed for 24 hours\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"


- name: redis_exporter
  rules:
  - alert: RedisDown
    expr: redis_up == 0
    for: 5m
    labels:
      service: Redis
      severity: critical
    annotations:
      summary: "Redis down (instance {{ $labels.instance }})"
      description: "Redis instance is down\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

  - alert: RedisOutOfMemory
    expr: redis_memory_used_bytes / redis_total_system_memory_bytes * 100 > 90
    for: 5m
    labels:
      service: Redis
      severity: warning
    annotations:
      summary: "Redis out of memory (instance {{ $labels.instance }})"
      description: "Redis is running out of memory (> 90%)\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

  - alert: RedisTooManyConnections
    expr: redis_connected_clients > 100
    for: 5m
    labels:
      service: Redis
      severity: warning
    annotations:
      summary: "Redis too many connections (instance {{ $labels.instance }})"
      description: "Redis instance has too many connections\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

  - alert: RedisNotEnoughConnections
    expr: redis_connected_clients < 5
    for: 2m
    labels:
      service: Redis
      severity: warning
    annotations:
      summary: Redis not enough connections (instance {{ $labels.instance }})
      description: "Redis instance should have more connections (> 5)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: RedisRejectedConnections
    expr: increase(redis_rejected_connections_total[1m]) > 0
    for: 0m
    labels:
      service: Redis
      severity: critical
    annotations:
      summary: Redis rejected connections (instance {{ $labels.instance }})
      description: "Some connections to Redis has been rejected\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
